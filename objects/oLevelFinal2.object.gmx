<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalEntry2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>oLevel</parentName>
  <maskName>sprFinalEntry2</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ID = 1;//0 will be the main hub
rm = r01;
label = "Level ?-?"
name = "Unnamed";

clear = 0;
isWorld = 0;

canUse = 0;
tempCanUse = 0;
require[0] = -1;
nodes = 1;

drawArrow = 0;
arrowInd = 0;
alarm[0] = 25;

image_speed = 0;
image_index = 2;

textA = 0;
textY = 0;

textHue = 0;
textCol = make_color_hsv(textHue,255,80);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 25;
arrowInd = !arrowInd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>textHue = (textHue + 0.5) mod 255;
textCol = make_color_hsv(textHue,255,80);

tempCanUse = canUse;
if instance_exists(oNewCamera){
    if oNewCamera.freeCam == 1{
        canUse = 0;
    }
}
if instance_exists(oMouseover){
    if oMouseover.warpMode == 1{
        canUse = 0;
    }
}

if instance_exists(objPlayer){
    if place_meeting(x,y,objPlayer){
        if canUse{
            drawArrow = 1;
        }
        if scrButtonCheckPressed(global.intrButton) &amp;&amp; canUse &amp;&amp; !instance_exists(oWorldTransition) &amp;&amp; !instance_exists(oLevelTransition){
            scrPlaySoundExt(sndLevel,1,1,false);
            with objPlayer{event_user(2);}
            if !isWorld{
                global.roomOuter = room;
                global.roomNum = ID;
                global.outerLevelTele = 1;
                global.levelEnteredX = x + 57;
                global.levelEnteredY = y + 71;
                t = instance_create(0,0,oLevelTransition);
                t.label = label;
                t.name = name;
                t.roomTo = rm;
            }else{
                audio_sound_gain(global.currentMusic,0,1000);
                global.roomOuter = rm;
                global.roomNum = ID;
                global.outerLevelTele = 0;
                t = instance_create(0,0,oWorldTransition);
                t.roomTo = rm;
                //Room Transition Color
                switch rm{
                    default:
                        t.color = c_black;
                        global.roomTransitionColor = c_black;
                    break;
                }
            }
        }
    }else{
        drawArrow = 0;
    }
}
if drawArrow{
    textA = min(textA + 0.1, 1);
    textY += (-16-textY) * .2;
    if abs(textY+16)&lt;1{textY = -16;}
}else{
    textA = max(textA - 0.1, 0);
    textY += (0-textY) * .2;
    if abs(textY)&lt;1{textY = 0;}
}

canUse = tempCanUse;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///vars

if require[0] == -1{
    canUse = 1;
    image_index = 0;
}else{
    for(var iReq = 0; iReq &lt; nodes; iReq += 1){
        if global.roomClear[require[iReq]] == 1{
            canUse = 1;
            image_index = 0;
        }
    }
}

if !isWorld{
    if global.roomClear[ID]{
        image_index = 1;
        clear = 1;
    }
}else{
    if global.areaClear[ID] &amp;&amp; rm != rMainHub{
        image_index = 1;
        clear = 1;
    }
    if global.areaComplete[ID] &amp;&amp; rm != rMainHub{
        image_index = 3;
        clear = 1;
    }
    if rm == rMainHub &amp;&amp; global.roomClear[0]{
        image_index = 1;
        clear = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Why'd I make this have oLevel as parent again?
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !isWorld{
    draw_self();
}else{
    if rm != rMainHub{//World entries (includes sub-hubs)
        draw_sprite(sprWorldEntry,ID+1,x,y);
    }else{
        draw_sprite(sprWorldEntry,0,x,y);//Doors leading *back* to the main hub
    }
    if image_index == 1{//Image_index is a stand-in for world clear/completion
        draw_sprite(sprWorldEntry,15,x,y);
    }else if image_index == 3{
        draw_sprite(sprWorldEntry,16,x,y);
    }
}
if drawArrow{
    draw_sprite(sprUpArrowDoor,arrowInd,x+56,y);
}
draw_set_alpha(textA);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

draw_set_font(fMiniID);
draw_set_color(textCol);
drawTextOutline(x+56*image_xscale,y-24+textY,label,1,0);
draw_set_color(c_white);
draw_text(x+56*image_xscale,y-24+textY,label);

draw_set_font(fMiniLevel);
draw_set_color(textCol);
drawTextOutline(x+56*image_xscale,y+textY,name,1,0);
draw_set_color(c_white);
draw_text(x+56*image_xscale,y+textY,name);

draw_set_color(c_white);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
