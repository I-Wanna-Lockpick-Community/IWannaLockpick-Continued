<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0
t = 0
frontA = 1
kinaA = 0
kinaY = 0
drawKina = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state
{
    case 0:
        with (objPlayer)
            frozen = 1
        frontA = max((frontA - 0.02), 0)
        if (frontA == 0)
        {
            state = 1
            with (objPlayer)
                frozen = 0
        }
        break
    case 1:
        break
    case 2:
        t = min((t + 1), 100)
        if (t == 50)
        {
            drawKina = 0
            with (objPlayer)
                event_user(2)
            wAni = instance_create(x, (y + kinaY), oPlayerWarpFade)
            wAni.sprite_index = sprKinaHead
            wAni.image_index = 0
            wAni.image_xscale = -1
            scrPlaySoundExt(sndAwaken, 0.8, 1.5, false)
            scrPlaySoundExt(sndSelectMade, 1, 0.8, false)
            audio_sound_gain(global.currentMusic, 0, 1000)
        }
        if (t == 100)
        {
            frontA = min((frontA + 0.01), 1)
            if (frontA == 1)
            {
                state = 3
                instance_create(400, 304, oIntroTextBox)
            }
        }
        break
    case 3:
        break
}

kinaA = ((kinaA + 1) % 360)
kinaY = round((3 * sin(degtorad(kinaA))))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawScreenRect(c_black, frontA)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if drawKina
{
    draw_sprite_ext(sprKinaHead, 0, (x + 3), ((y + kinaY) + 3), -1, 1, 0, c_black, 0.35)
    draw_sprite_ext(sprKinaHead, 1, (x - 1), (y + kinaY), -1, 1, 0, c_white, 1)
    draw_sprite_ext(sprKinaHead, 1, (x + 1), (y + kinaY), -1, 1, 0, c_white, 1)
    draw_sprite_ext(sprKinaHead, 1, x, ((y + kinaY) - 1), -1, 1, 0, c_white, 1)
    draw_sprite_ext(sprKinaHead, 1, x, ((y + kinaY) + 1), -1, 1, 0, c_white, 1)
    draw_sprite_ext(sprKinaHead, 0, x, (y + kinaY), -1, 1, 0, c_white, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
