<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lilAngle = 0
starRad = 1
starAngle = 0
starAlpha = 0
starX = 400
starY = 160
background_color = make_color_rgb(40, 120, 180)
background_visible[0] = 1
background_index[0] = bGradient
background_blend[0] = make_color_rgb(0, 20, 60)
background_index[1] = bStars
background_visible[1] = 1
background_hspeed[1] = -0.2
background_alpha[1] = 1
background_xscale[1] = 1
background_yscale[1] = 1
background_index[2] = bTreesW4
background_visible[2] = 0
background_vtiled[2] = 0
bgY = 0
bgY2 = 0
bgA = 0
background_index[4] = bMistOcean
background_visible[4] = 0
background_blend[4] = make_color_hsv(170, 200, 150)
background_alpha[4] = 1
background_y[4] = 308
background_hspeed[4] = -0.3
background_vtiled[4] = 0
for (iX = 0; iX &lt; room_width; iX += 120)
{
    for (iY = 200; iY &lt; room_height; iY += 120)
    {
        spawnX = (iX + random_range(8, 112))
        spawnY = (iY + random_range(8, 112))
        particle = instance_create(spawnX, spawnY, oLightPart)
        particle.type = 0
        particle.image_index = 0
        with (particle)
            event_user(0)
        spawnX = (iX + random_range(0, 120))
        spawnY = (iY + random_range(0, 120))
        particle = instance_create(spawnX, spawnY, oLightPart)
        particle.type = 1
        particle.image_index = 1
        with (particle)
            event_user(0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bgA = ((bgA + 1.5) % 360)
bgY = round((3 * sin(degtorad(bgA))))
bgY2 = (-bgY)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a1, a2, a3, sinea1, cosa1, sinea2, cosa2, sinea3, cosa3, sx1, sy1, sx2, sy2, sx3, sy3;
lilAngle = ((lilAngle + 0.2) % 360)
lilSine = (1.025 - (0.025 * cos(degtorad(lilAngle))))
lilSine *= starRad
draw_set_color(c_black)
draw_set_alpha((0.35 * starAlpha))
starAngle = ((starAngle + 0.4) % 360)
for (iS = 0; iS &lt; 5; iS += 1)
{
    a1 = ((((iS * 360) / 5) + 36) + starAngle)
    a2 = (a1 + 72)
    a3 = (a1 + 36)
    sinea1 = sin(degtorad(a1))
    cosa1 = cos(degtorad(a1))
    sinea2 = sin(degtorad(a2))
    cosa2 = cos(degtorad(a2))
    sinea3 = sin(degtorad(a3))
    cosa3 = cos(degtorad(a2))
    sinea1 *= lilSine
    sinea2 *= lilSine
    sinea3 *= lilSine
    cosa1 *= lilSine
    cosa2 *= lilSine
    cosa3 *= lilSine
    sx1 = 400
    sy1 = 400
    sx2 = (sx1 + (100 * sinea1))
    sy2 = (sy1 + (100 * cosa1))
    sx3 = (sx1 + (100 * sinea2))
    sy3 = (sy1 + (100 * cosa2))
    draw_triangle((sx1 + 4), (sy1 + 4), (sx2 + 4), (sy2 + 4), (sx3 + 4), (sy3 + 4), 0)
    sx1 = (400 + (200 * sinea3))
    sy1 = (400 + (200 * cosa3))
    draw_triangle((sx1 + 4), (sy1 + 4), (sx2 + 4), (sy2 + 4), (sx3 + 4), (sy3 + 4), 0)
}
draw_set_alpha(1)
for (iS = 0; iS &lt; 5; iS += 1)
{
    a1 = ((((iS * 360) / 5) + 36) + starAngle)
    a2 = (a1 + 72)
    a3 = (a1 + 36)
    sinea1 = sin(degtorad(a1))
    cosa1 = cos(degtorad(a1))
    sinea2 = sin(degtorad(a2))
    cosa2 = cos(degtorad(a2))
    sinea3 = sin(degtorad(a3))
    cosa3 = cos(degtorad(a3))
    draw_set_color(merge_color(make_color_hsv(0, 255, 255), make_color_hsv(190, 70, 30), (0.4 - (0.4 * cosa3))))
    sinea1 *= lilSine
    sinea2 *= lilSine
    sinea3 *= lilSine
    cosa1 *= lilSine
    cosa2 *= lilSine
    cosa3 *= lilSine
    sx1 = 400
    sy1 = 400
    sx2 = (sx1 + (100 * sinea1))
    sy2 = (sy1 + (100 * cosa1))
    sx3 = (sx1 + (100 * sinea2))
    sy3 = (sy1 + (100 * cosa2))
    draw_triangle(sx1, sy1, sx2, sy2, sx3, sy3, 0)
    sx1 = (400 + (200 * sinea3))
    sy1 = (400 + (200 * cosa3))
    draw_triangle(sx1, sy1, sx2, sy2, sx3, sy3, 0)
    draw_set_color(make_color_hsv(190, 150, 30))
    sx1 = 400
    sy1 = 400
    sx2 = (sx1 + (90 * sinea1))
    sy2 = (sy1 + (90 * cosa1))
    sx3 = (sx1 + (90 * sinea2))
    sy3 = (sy1 + (90 * cosa2))
    draw_triangle(sx1, sy1, sx2, sy2, sx3, sy3, 0)
    sx1 = (400 + (180 * sinea3))
    sy1 = (400 + (180 * cosa3))
    draw_triangle(sx1, sy1, sx2, sy2, sx3, sy3, 0)
}
draw_set_color(c_white)
draw_set_alpha(1)
scrDrawBGElement(2)
scrDrawBGElement(4)
draw_set_blend_mode(1)
with (oLightPart)
    draw_self()
draw_set_blend_mode(0)
with (oLightPart)
    draw_sprite_ext(sprite_index, image_index, x, y, (image_xscale * 0.5), (image_yscale * 0.5), 0, c_white, 0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
