<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(oUndoMain) &gt;= 2)
{
    instance_destroy()
    exit
}
validRoom = 0
saveBuffered = 0
stableFooting = 0
recentPush = 0
undoStack = ds_stack_create()
undoPos = 0
instArray[0] = 0
instSize = 0
instTemp = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_stack_destroy(undoStack)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dist;
if (!validRoom)
    exit
if (!instance_exists(objPlayer))
    exit
if global.inCutscene
    exit
if saveBuffered
{
    stableFooting = 0
    if instance_exists(objPlayer)
    {
        with (oDoorSimple)
            solid = 0
        with (oDoorCombo)
            solid = 0
        with (objPlayer)
        {
            if ((!place_free(x, (y + 1))) &amp;&amp; place_free(x, y))
            {
                other.stableFooting = 1
                if instance_exists(oDoorSimple)
                {
                    dist = distance_to_object(oDoorSimple)
                    if (dist &lt;= 1)
                        other.stableFooting = 0
                    if ((dist &lt;= 23) &amp;&amp; ((brownMode != 0) || ((aura[0] == 1) || ((aura[1] == 1) || (aura[2] == 1)))))
                        other.stableFooting = 0
                }
                if instance_exists(oDoorCombo)
                {
                    dist = distance_to_object(oDoorCombo)
                    if (dist &lt;= 1)
                        other.stableFooting = 0
                    if ((dist &lt;= 23) &amp;&amp; ((brownMode != 0) || ((aura[0] == 1) || ((aura[1] == 1) || (aura[2] == 1)))))
                        other.stableFooting = 0
                }
                if instance_exists(oKeyBulk)
                {
                    if place_meeting(x, y, oKeyBulk)
                        other.stableFooting = 0
                }
                if instance_exists(oGate)
                {
                    if place_meeting(x, y, oGate)
                        other.stableFooting = 0
                }
                if instance_exists(oKina)
                {
                    dist = distance_to_object(oKina)
                    if (dist &lt;= 1)
                        other.stableFooting = 0
                    if ((dist &lt;= 23) &amp;&amp; (brownMode != 0))
                        other.stableFooting = 0
                }
            }
            if place_meeting(x, y, oSalvageIn)
                other.stableFooting = 0
        }
        with (oDoorSimple)
        {
            solid = 1
            if brownNearPlayer
                other.stableFooting = 0
        }
        with (oDoorCombo)
        {
            solid = 1
            if brownNearPlayer
                other.stableFooting = 0
        }
    }
    if stableFooting
    {
        saveBuffered = 0
        undoPUSH()
    }
    else
        show_debug_message("Not stable footing")
}
if instance_exists(oNewCamera)
{
    if (oNewCamera.freeCam == 1)
        exit
}
if (scrButtonCheckPressed(global.shootButton) &amp;&amp; (global.pmState == 0))
{
    if (undoPos == 1)
    {
        if (!recentPush)
        {
            undoPOP()
            undoPUSH()
            scrPlaySoundExt(sndSelectBeep, 0.6, 0.6, false)
        }
    }
    else if (undoPos &gt;= 1)
    {
        if recentPush
        {
            if saveBuffered
            {
                undoPOP()
                undoPUSH()
            }
            else
            {
                undoPOP()
                undoPOP()
                undoPUSH()
                saveBuffered = 0
            }
        }
        else
        {
            undoPOP()
            undoPOP()
            undoPUSH()
            saveBuffered = 0
        }
        scrPlaySoundExt(sndSelectBeep, 0.6, 0.6, false)
    }
    if ((undoPos == 0) &amp;&amp; (ds_stack_size(undoStack) == 0))
        undoPUSH()
}
with (oDoorSimple)
    undoReposition()
with (oKeyBulk)
    undoReposition()
with (oDoorCombo)
    undoReposition()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_stack_clear(undoStack)
undoPos = 0
saveBuffered = 0
stableFooting = 0
undoCorrection = 0
global.inCutscene = 0
global.salvageActive = 0
global.salvageID = -1
validRoom = 1
switch room
{
    case rInit:
    case 1:
    case 2:
    case 3:
    case 4:
        validRoom = 0
        break
}

if validRoom
{
    instSize = 0
    instTemp = 0
    with (oSalvageOut)
        event_user(0)
    with (oSalvageOut)
        event_user(1)
    with (oSalvageOut)
        event_user(2)
    with (oSalvageIn)
    {
        other.instArray[other.instTemp] = id
        other.instTemp += 1
        other.instSize += 1
    }
    with (oKeyBulk)
    {
        other.instArray[other.instTemp] = id
        other.instTemp += 1
        other.instSize += 1
    }
    with (oDoorSimple)
    {
        other.instArray[other.instTemp] = id
        other.instTemp += 1
        other.instSize += 1
    }
    with (oDoorCombo)
    {
        other.instArray[other.instTemp] = id
        other.instTemp += 1
        other.instSize += 1
    }
    with (oGate)
    {
        other.instArray[other.instTemp] = id
        other.instTemp += 1
        other.instSize += 1
    }
    with (oKina)
    {
        other.instArray[other.instTemp] = id
        other.instTemp += 1
        other.instSize += 1
    }
    undoPUSH()
}
with (objPlayer)
{
    if (!place_free(x, y))
    {
        event_user(3)
        audio_sound_gain(global.currentMusic, 0, 1000)
        global.inCutscene = 1
        cutObj = instance_create(0, 0, oLevelWinInvalid)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_stack_destroy(undoStack)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
