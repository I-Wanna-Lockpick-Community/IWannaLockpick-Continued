<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sOld, sNew, _ox, _oy;
style = 0
heartCount = 0
heartX[0] = 0
heartY[0] = 0
heartS[0] = 1
heartA[0] = 0
sOld = random_get_seed()
sNew = room
random_set_seed(sNew)
for (i = 0; i &lt;= (room_width / 32); i += 1)
{
    _ox = ((25 * i) + random_range(-8, 8))
    _ox *= 2
    _oy = ((200 * (i % 3)) + random(200))
    _oy *= 1
    heartCount += 1
    heartX[i] = lerp((room_width / 2), _ox, 1.1)
    heartY[i] = lerp((room_height / 2), _oy, 1.1)
    heartS[i] = random_range(0.25, 1)
    heartA[i] = random(360)
}
random_set_seed(sOld)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for (i = 0; i &lt; heartCount; i += 1)
    heartA[i] = ((heartA[i] + 1) % 360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tiles, i;
if (style == 0)
    color = make_color_rgb(255, 0, 128)
else
    color = make_color_rgb(0, 128, 255)
background_index[0] = bGradient
background_blend[0] = merge_color(color, c_black, 0.8)
background_visible[0] = 1
background_color = 0
tiles = tile_get_ids_at_depth(9999)
for (i = 0; i &lt; array_length_1d(tiles); i++)
    tile_set_blend(tiles[i], color)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, _pth, _pnum, ii, _lx, _ly, _lx2, _ly2;
draw_set_color(color)
for (i = 0; i &lt; heartCount; i += 1)
{
    draw_set_alpha(heartS[i])
    _pth = pthKH0
    _pnum = path_get_number(_pth)
    for (ii = 0; ii &lt; (_pnum - 1); ii += 1)
    {
        _lx = (heartX[i] + (path_get_point_x(_pth, ii) * heartS[i]))
        _ly = (heartY[i] + ((path_get_point_y(_pth, ii) + (16 * sin(degtorad(heartA[i])))) * heartS[i]))
        _lx2 = (heartX[i] + (path_get_point_x(_pth, (ii + 1)) * heartS[i]))
        _ly2 = (heartY[i] + ((path_get_point_y(_pth, (ii + 1)) + (16 * sin(degtorad(heartA[i])))) * heartS[i]))
        draw_line(_lx, _ly, _lx2, _ly2)
    }
}
draw_set_alpha(1)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
