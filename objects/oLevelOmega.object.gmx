<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprOmegaPuzzle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprLevelEntry</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ID = 1
omegaID = 0
rm = 26
label = "Level ?-Î©"
name = "Unnamed"
contributor = ""
clear = 0
isWorld = 0
canUse = 0
require[0] = -1
nodes = 1
drawArrow = 0
arrowInd = 0
alarm[0] = 25
image_speed = 0
image_index = 2
textA = 0
textY = 0
myLight = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 25
arrowInd = (!arrowInd)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.complexMode == 0)
    exit
tempCanUse = canUse
if instance_exists(oNewCamera)
{
    if (oNewCamera.freeCam == 1)
        canUse = 0
}
if instance_exists(oMouseover)
{
    if (oMouseover.warpMode == 1)
        canUse = 0
}
if instance_exists(objPlayer)
{
    if place_meeting(x, y, objPlayer)
    {
        if canUse
            drawArrow = 1
        if (scrButtonCheckPressed(global.upButton) &amp;&amp; (canUse &amp;&amp; ((!instance_exists(oWorldTransition)) &amp;&amp; (!instance_exists(oLevelTransition)))))
        {
            scrPlaySoundExt(sndLevel, 1, 1, false)
            audio_sound_gain(global.currentMusic, 0, 1000)
            with (objPlayer)
                event_user(2)
            if (!isWorld)
            {
                global.roomOuter = room
                global.roomNum = ID
                global.outerLevelTele = 1
                global.levelEnteredX = (x + 17)
                global.levelEnteredY = (y + 23)
                t = instance_create(0, 0, oLevelTransition)
                t.label = label
                t.name = name
                t.roomTo = rm
                t.contributor = contributor
            }
        }
    }
    else
        drawArrow = 0
}
if drawArrow
{
    textA = min((textA + 0.1), 1)
    textY += ((-16 - textY) * 0.2)
    if (abs((textY + 16)) &lt; 1)
        textY = -16
}
else
{
    textA = max((textA - 0.1), 0)
    textY += ((0 - textY) * 0.2)
    if (abs(textY) &lt; 1)
        textY = 0
}
canUse = tempCanUse
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.omegaKey[omegaID]
{
    image_index = 0
    canUse = 1
}
if (!isWorld)
{
    if global.roomClear[ID]
    {
        image_index = 1
        clear = 1
    }
}
else
{
    if (global.areaClear[ID] &amp;&amp; (rm != 17))
    {
        image_index = 1
        clear = 1
    }
    if (global.areaComplete[ID] &amp;&amp; (rm != 17))
    {
        image_index = 3
        clear = 1
    }
    if ((rm == 17) &amp;&amp; global.roomClear[0])
    {
        image_index = 1
        clear = 1
    }
}
myLight = self
if (global.object[2] == 1)
{
    if (instance_exists(oLightsW5) || (instance_exists(oLightsW4) || (instance_exists(oLightsW6) || (instance_exists(oBGW7) || (instance_exists(oLightsW9) || instance_exists(oBGW12))))))
    {
        myLight = instance_create((x + 16), (y + 16), oLight)
        myLight.parent = id
        myLight.image_xscale = 0.15
        myLight.image_yscale = 0.15
        myLight.image_blend = c_silver
        if (image_index == 1)
        {
            myLight.image_xscale = 0.2
            myLight.image_yscale = 0.2
            myLight.image_blend = c_white
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tempX, tempY;
if (global.complexMode == 0)
    exit
tempX = round((((x - view_xview[0]) * 800) / max(view_wview[0], 1)))
tempY = round((((y - view_yview[0]) * 608) / max(view_hview[0], 1)))
if drawArrow
    draw_sprite(sprUpArrowDoor, arrowInd, (tempX + 16), tempY)
draw_set_alpha(textA)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_font(fMiniID)
draw_set_color(c_black)
drawTextOutline((tempX + (16 * image_xscale)), ((tempY - 24) + textY), label, 1, 0)
draw_set_color(c_white)
draw_text((tempX + (16 * image_xscale)), ((tempY - 24) + textY), label)
draw_set_font(fMiniLevel)
draw_set_color(c_black)
drawTextOutline((tempX + (16 * image_xscale)), (tempY + textY), name, 1, 0)
draw_set_color(c_white)
draw_text((tempX + (16 * image_xscale)), (tempY + textY), name)
draw_set_color(c_white)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.complexMode == 0)
    exit
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
