<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>90000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.lowFX
    exit
with (oLevel)
{
    if (!isWorld)
        draw_sprite_ext(sprite_index, 0, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
    else if (rm == 17)
        draw_sprite_ext(sprWorldEntry, 0, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
    else
        draw_sprite_ext(sprWorldEntry, (ID + 1), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
}
with (oLevelOmega)
{
    if (global.complexMode == 1)
        draw_sprite_ext(sprite_index, 0, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
}
with (objBlock)
{
    if (object_index == objBlock)
        draw_sprite_ext(sprBlockWhite, 0, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, 0.35)
    else if ((object_index == oDoorLarge) || ((object_index == oDoorCombo) || ((object_index == oDoorSimple) || (object_get_parent(object_index) == 234))))
    {
        if copyDraw
            draw_sprite_ext(sprBlockWhite, 0, (x + 3), (y + 3), w, h, image_angle, c_black, 0.35)
    }
    else if ((object_index == objStairR) || (object_index == objStairL))
        draw_sprite_ext(sprite_index, image_index, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
}
with (oKeySimple)
{
    if (color != 0)
        draw_sprite_ext(sprite_index, 2, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
    else
        draw_sprite_ext(sprite_index, floor(image_index), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
}
with (oKeyBulk)
{
    if (color != 0)
        draw_sprite_ext(sprAllKeysWhite, type, (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
    else
        draw_sprite_ext(sprAllKeysWhite, (type + 8), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
}
with (objPlayerKiller)
    draw_sprite_ext(sprite_index, floor(image_index), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
with (objPlayer)
    draw_sprite_ext(sprite_index, floor(image_index), (x + 3), (y + 3), (image_xscale * xScale), image_yscale, image_angle, c_black, (0.35 * image_alpha))
with (objBullet)
    draw_sprite_ext(sprite_index, floor(image_index), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
with (objSave)
    draw_sprite_ext(sprite_index, floor(image_index), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
with (objWarp)
    draw_sprite_ext(sprite_index, floor(image_index), (x + 3), (y + 3), image_xscale, image_yscale, image_angle, c_black, (0.35 * image_alpha))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
