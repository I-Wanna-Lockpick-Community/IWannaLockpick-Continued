<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color = global.roomTransitionColor;
alpha = 0;
state = 0;
roomTo = rMainHub;
timer = 0;

label = "Level ?-?";
name = "Unnamed";
contributor = "";
textOff = -500;
textA = 0;
wiggleA = 0;
wiggleX = 0;
wiggleY = 0;
wiggleX2 = 0;
wiggleY2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state{
    case 0://fade in
        timer = min(timer+1,35);
        alpha = timer/35;
        if timer == 35{
            timer = 0;
            state = 1;
        }
    break;
    case 1://stay
        timer = min(timer+1, 150);
        textA = min(timer,40)*90/40;
        textOff = -500+500*sin(degtorad(textA));
        if timer &gt;= 40 &amp;&amp; timer &lt; 150{
            if scrButtonCheckPressed(global.selButton) || scrButtonCheckPressed(global.jumpButton) || scrButtonCheckPressed(global.shootButton) || scrButtonCheckPressed(global.restartButton){
                timer = 0;
                state = 2;
                global.inLevel = 1;
                room_goto(roomTo);
            }
        }else if timer == 150{
            timer = 0;
            state = 2;
            global.inLevel = 1;
            room_goto(roomTo);
        }
    break;
    case 2://fade out
        timer = min(timer+1, 35);
        textA = 90+(timer*90/35);
        textOff = -500+500*sin(degtorad(textA));
        alpha = 1 - (timer/35);
        if timer == 25{instance_destroy();}
    break;
}
wiggleA = (wiggleA + 5.6) mod 360;
wiggleX = 3*sin(degtorad(wiggleA));
wiggleY = 3*cos(degtorad(wiggleA));
wiggleX2 = 6*sin(degtorad(wiggleA+50));
wiggleY2 = 6*cos(degtorad(wiggleA+50));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//rectangle
draw_set_color(color);
draw_set_alpha(alpha);
draw_rectangle(-1,-1,800,608,0);
draw_set_color(c_white);
draw_set_alpha(1);
//text
draw_set_halign(fa_center);
draw_set_valign(fa_center);

draw_set_font(fLevelID);
draw_set_color(c_black);
drawTextOutline(400+wiggleX,240+textOff+wiggleY,label,2,1);
draw_set_color(c_white);
draw_text(400+wiggleX,240+textOff+wiggleY,label);

draw_set_color(c_black);
draw_set_font(fLevelName);
drawTextOutline(400+wiggleX2,304+textOff+wiggleY2,name,2,1);
draw_set_color(c_white);
draw_text(400+wiggleX2,304+textOff+wiggleY2,name);

//contributor
if contributor != ""{
    var contstr = "Contributed by "+contributor;
    draw_set_font(fLevelName);
    draw_set_color(c_white);
    drawTextOutline(400+wiggleX*.5,400+textOff+wiggleY*.5,contstr,2,1);
    draw_set_color(c_black);
    draw_text(400+wiggleX*.5,400+textOff+wiggleY*.5,contstr);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
