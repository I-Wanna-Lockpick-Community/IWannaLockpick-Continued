<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCamera</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>expFactor = 0.1
xmin = 0
xmax = (room_width - 800)
ymin = 0
ymax = (room_height - 608)
xLowest = 0
xHighest = 0
yLowest = 0
yHighest = 0
zoomLevel = 1
zoomTarget = 1
zoomW = 800
zoomH = 608
clampW = 400
clampH = 304
freeCam = 0
boxAmt = 0
shakeAmt = 0
if instance_exists(objPlayer)
{
    x = objPlayer.x
    y = objPlayer.y
    x = clamp(x, (xmin + 400), (xmax + 400))
    y = clamp(y, (ymin + 304), (ymax + 304))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var check2;
if instance_exists(oMouseover)
    check2 = (!oMouseover.warpMode)
else
    check2 = 1
if (scrButtonCheckPressed(global.camButton) &amp;&amp; (check2 &amp;&amp; ((!global.inCutscene) &amp;&amp; ((!instance_exists(oIntroTransition)) &amp;&amp; (instance_exists(objPlayer) &amp;&amp; (global.pmState == 0))))))
{
    if ((xmax != xmin) || (ymax != ymin))
    {
        freeCam = (!freeCam)
        if (freeCam == 0)
        {
            zoomTarget = 1
            with (objPlayer)
                frozen = 0
        }
        if (freeCam == 1)
        {
            targetX = x
            targetY = y
            with (objPlayer)
                frozen = 1
        }
        scrPlaySoundExt(sndCamera, 1, 1, false)
    }
    else
    {
        freeCam = 0
        zoomTarget = 1
    }
}
if global.inCutscene
{
    freeCam = 0
    zoomTarget = 1
}
xLowest = min(xLowest, xmin)
xHighest = max(xHighest, xmax)
yLowest = min(yLowest, ymin)
yHighest = max(yHighest, ymax)
zoomLevel += ((zoomTarget - zoomLevel) * 0.1)
if (abs((zoomLevel - zoomTarget)) &lt; 0.00125)
    zoomLevel = zoomTarget
zoomW = (800 * zoomLevel)
zoomH = (608 * zoomLevel)
clampW = (zoomW / 2)
clampH = (zoomH / 2)
if (!freeCam)
{
    boxAmt += ((0 - boxAmt) * 0.1)
    if (boxAmt &lt; 0.01)
        boxAmt = 0
    if instance_exists(objPlayer)
    {
        targetX = objPlayer.x
        targetY = objPlayer.y
        targetX = clamp(targetX, (xmin + clampW), ((xmax + 800) - clampW))
        targetY = clamp(targetY, (ymin + clampH), ((ymax + 608) - clampH))
        x += ((targetX - x) * expFactor)
        y += ((targetY - y) * expFactor)
    }
}
else
{
    boxAmt += ((1 - boxAmt) * 0.1)
    if (boxAmt &gt; 0.99)
        boxAmt = 1
    if (scrButtonCheckPressed(global.masButton) &amp;&amp; (global.pmState == 0))
    {
        if (zoomTarget == 1)
        {
            zoomTarget = min((((800 + xmax) - xmin) / 800), (((608 + ymax) - ymin) / 608))
            if (zoomTarget &gt; 1)
                scrPlaySoundExt(sndCamera, 1, 1.5, false)
        }
        else
        {
            zoomTarget = 1
            scrPlaySoundExt(sndCamera, 1, 0.75, false)
        }
    }
    if (scrButtonCheck(global.upButton) &amp;&amp; (global.pmState == 0))
        targetY -= (6 * zoomLevel)
    else if (scrButtonCheck(global.downButton) &amp;&amp; (global.pmState == 0))
        targetY += (6 * zoomLevel)
    if (scrButtonCheck(global.rightButton) &amp;&amp; (global.pmState == 0))
        targetX += (6 * zoomLevel)
    else if (scrButtonCheck(global.leftButton) &amp;&amp; (global.pmState == 0))
        targetX -= (6 * zoomLevel)
    targetX = clamp(targetX, (xmin + clampW), ((xmax + 800) - clampW))
    targetY = clamp(targetY, (ymin + clampH), ((ymax + 608) - clampH))
    x += ((targetX - x) * expFactor)
    y += ((targetY - y) * expFactor)
}
view_xview[0] = clamp(round((x - clampW)), min(xLowest, 0), max(((xHighest + 800) - (800 * zoomLevel)), (room_width - (800 * zoomLevel))))
view_yview[0] = clamp(round((y - clampH)), min(yLowest, 0), max(((yHighest + 608) - (608 * zoomLevel)), (room_height - (608 * zoomLevel))))
view_wview[0] = (zoomLevel * 800)
view_hview[0] = (zoomLevel * 608)
shakeAmt = max((shakeAmt - 0.1), 0)
if (shakeAmt != 0)
{
    view_xview[0] += random_range((-shakeAmt), shakeAmt)
    view_yview[0] += random_range((-shakeAmt), shakeAmt)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_place(x, y, oCameraTrg) != -1)
{
    with (instance_place(x, y, oCameraTrg))
    {
        other.xmin = xmin
        other.xmax = xmax
        other.ymin = ymin
        other.ymax = ymax
    }
}
if instance_exists(objPlayer)
{
    x = objPlayer.x
    y = objPlayer.y
    x = clamp(x, (xmin + 400), (xmax + 400))
    y = clamp(y, (ymin + 304), (ymax + 304))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_place(x, y, oCameraTrg) != -1)
{
    with (instance_place(x, y, oCameraTrg))
    {
        other.xmin = xmin
        other.xmax = xmax
        other.ymin = ymin
        other.ymax = ymax
    }
}
if instance_exists(objPlayer)
{
    x = objPlayer.x
    y = objPlayer.y
    x = clamp(x, (xmin + 400), (xmax + 400))
    y = clamp(y, (ymin + 304), (ymax + 304))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _l;
draw_set_color(c_black)
_l = (1 - boxAmt)
draw_rectangle((8 - (16 * _l)), (8 - (16 * _l)), (792 + (16 * _l)), (600 + (16 * _l)), 1)
draw_rectangle((4 - (16 * _l)), (4 - (16 * _l)), (796 + (16 * _l)), (604 + (16 * _l)), 1)
draw_set_color(c_white)
draw_set_font(fPresents)
draw_set_alpha(boxAmt)
draw_set_halign(fa_left)
draw_set_valign(fa_bottom)
scrDrawTextOutline(12, 596, (("[" + getBindStr(global.masButton, global.usingController)) + "] to zoom"), c_white, c_black)
draw_set_halign(fa_right)
scrDrawTextOutline(788, 596, (("[" + getBindStr(global.camButton, global.usingController)) + "] to exit"), c_white, c_black)
draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
