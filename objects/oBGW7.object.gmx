<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10001000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(oBGW7) &gt; 1)
{
    instance_destroy()
    exit
}
curSong = -1
scrStopMusic()
deleteNext = 0
totalTime = 25699
transTime = 0
transMax = 1000
inTransition = 0
colI = 0
colI2 = 1
lightArray[0] = make_color_hsv(165, 60, 255)
lightArray[1] = 16777215
lightArray[2] = make_color_hsv(30, 60, 255)
lightArray[3] = 12632256
waterArray[0] = make_color_hsv(170, 255, 140)
waterArray[1] = make_color_hsv(130, 200, 200)
waterArray[2] = make_color_hsv(170, 220, 100)
waterArray[3] = make_color_hsv(170, 255, 60)
surfArray[0] = make_color_hsv(150, 150, 170)
surfArray[1] = make_color_hsv(110, 100, 240)
surfArray[2] = make_color_hsv(40, 180, 140)
surfArray[3] = make_color_hsv(160, 150, 90)
bgArray[0] = make_color_hsv(165, 200, 150)
bgArray[1] = make_color_hsv(140, 200, 255)
bgArray[2] = make_color_hsv(220, 255, 120)
bgArray[3] = make_color_hsv(190, 180, 60)
bg2Array[0] = make_color_hsv(150, 170, 180)
bg2Array[1] = make_color_hsv(100, 170, 220)
bg2Array[2] = make_color_hsv(30, 220, 150)
bg2Array[3] = make_color_hsv(170, 255, 30)
cloudArray[0] = make_color_hsv(170, 255, 100)
cloudArray[1] = make_color_hsv(110, 60, 255)
cloudArray[2] = make_color_hsv(0, 255, 120)
cloudArray[3] = 4210752
cpArray[0] = make_color_hsv(170, 60, 255)
cpArray[1] = make_color_hsv(130, 40, 255)
cpArray[2] = make_color_hsv(30, 70, 255)
cpArray[3] = 16777215
lightCol = lightArray[3]
waterCol = waterArray[3]
surfaceCol = surfArray[3]
bgCol = bgArray[3]
bg2Col = bg2Array[3]
cloudCol = cloudArray[3]
cpCol = cpArray[3]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(-200, random_range(0, 480), oWindPart)
alarm[1] = 25
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 400
instance_create(-400, random_range(-150, 0), oCloud)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tLerp;
totalTime += 1
switch totalTime
{
    case 1:
        if (!global.muteMusic)
        {
            if (curSong != -1)
                audio_stop_sound(curSong)
            curSong = audio_play_sound(musClouds2, 0, true)
            global.musicTitle = "FEZ - Reflections (Ocean Cut)"
            with (oMusicCredit)
                instance_destroy()
            instance_create(0, 0, oMusicCredit)
            global.musicVolume = 0.9
            audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
        }
        break
    case 7000:
        audio_sound_gain(curSong, 0, 40000)
        inTransition = 1
        transMax = 2000
        colI = 0
        colI2 = 1
        break
    case 9000:
        if (!global.muteMusic)
        {
            if (curSong != -1)
                audio_stop_sound(curSong)
            curSong = audio_play_sound(musClouds, 0, true)
            global.musicTitle = "FEZ - Beacon"
            with (oMusicCredit)
                instance_destroy()
            instance_create(0, 0, oMusicCredit)
            global.musicVolume = 0.9
            audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
        }
        break
    case 14700:
        audio_sound_gain(curSong, 0, 40000)
        inTransition = 1
        transMax = 2000
        colI = 1
        colI2 = 2
        break
    case 16700:
        if (!global.muteMusic)
        {
            if (curSong != -1)
                audio_stop_sound(curSong)
            curSong = audio_play_sound(musClouds2, 0, true)
            global.musicTitle = "FEZ - Reflections (Ocean Cut)"
            with (oMusicCredit)
                instance_destroy()
            instance_create(0, 0, oMusicCredit)
            global.musicVolume = 0.9
            audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
        }
        break
    case 23700:
        audio_sound_gain(curSong, 0, 40000)
        inTransition = 1
        transMax = 2000
        colI = 2
        colI2 = 3
        break
    case 25700:
        if (!global.muteMusic)
        {
            if (curSong != -1)
                audio_stop_sound(curSong)
            curSong = audio_play_sound(musClouds3, 0, true)
            global.musicTitle = "The Victors' Space Odyssey - The Rabbit of Oki, the Moon's Lullaby"
            with (oMusicCredit)
                instance_destroy()
            instance_create(0, 0, oMusicCredit)
            global.musicVolume = 0.8
            audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
        }
        break
    case 40000:
        audio_sound_gain(curSong, 0, 40000)
        inTransition = 1
        transMax = 2000
        colI = 3
        colI2 = 0
        break
    case 42000:
        totalTime = 0
        break
}

if (curSong != -1)
{
    if (audio_sound_get_gain(curSong) == 0)
    {
        audio_stop_sound(curSong)
        curSong = -1
    }
}
if global.muteMusic
    curSong = -1
if ((curSong == -1) &amp;&amp; (!global.muteMusic))
{
    if ((totalTime &gt;= 1) &amp;&amp; (totalTime &lt;= 6999))
    {
        curSong = audio_play_sound(musClouds2, 0, true)
        global.musicVolume = 0.9
        audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
    }
    else if ((totalTime &gt;= 9000) &amp;&amp; (totalTime &lt;= 14699))
    {
        curSong = audio_play_sound(musClouds, 0, true)
        global.musicVolume = 0.9
        audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
    }
    else if ((totalTime &gt;= 16700) &amp;&amp; (totalTime &lt;= 23699))
    {
        curSong = audio_play_sound(musClouds2, 0, true)
        global.musicVolume = 0.9
        audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
    }
    else if ((totalTime &gt;= 25700) &amp;&amp; (totalTime &lt;= 39999))
    {
        curSong = audio_play_sound(musClouds3, 0, true)
        global.musicVolume = 0.8
        audio_sound_gain(curSong, ((global.musicVolume * global.musicLevel) / 100), 0)
    }
}
if (global.muteMusic &amp;&amp; (curSong != -1))
{
    audio_stop_sound(curSong)
    curSong = -1
}
if inTransition
{
    transTime = min((transTime + 1), transMax)
    tLerp = (transTime / transMax)
    bgCol = merge_color(bgArray[colI], bgArray[colI2], tLerp)
    bg2Col = merge_color(bg2Array[colI], bg2Array[colI2], tLerp)
    cloudCol = merge_color(cloudArray[colI], cloudArray[colI2], tLerp)
    cpCol = merge_color(cpArray[colI], cpArray[colI2], tLerp)
    lightCol = merge_color(lightArray[colI], lightArray[colI2], tLerp)
    waterCol = merge_color(waterArray[colI], waterArray[colI2], tLerp)
    surfaceCol = merge_color(surfArray[colI], surfArray[colI2], tLerp)
    if (transTime == transMax)
    {
        inTransition = 0
        transTime = 0
    }
}
background_blend[0] = bgCol
background_color = bg2Col
with (oCloud)
    image_blend = other.cloudCol
with (oWindPart)
    image_blend = merge_color(c_white, other.cloudCol, 0.5)
with (oCloudPart)
    image_blend = other.cpCol
with (oW7Ocean)
{
    waterCol = other.waterCol
    surfaceCol = other.surfaceCol
}
with (oW7Reflection)
    color = other.surfaceCol
with (oLightsW7)
    ambCol = other.lightCol
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ix, iy, p, _yoff, _oline;
if ((room == rBackHub) || ((room == rTitle) || ((room == rInit) || ((room == rTitleNew) || deleteNext))))
{
    instance_destroy()
    audio_stop_sound(curSong)
    exit
}
with (instance_create(0, 0, oW7Ocean))
{
    waterCol = other.waterCol
    surfaceCol = other.surfaceCol
}
for (t = 0; t &lt; 4000; t += 400)
{
    with (instance_create(-400, random_range(-150, 0), oCloud))
    {
        x += (hspeed * other.t)
        y += (vspeed * other.t)
    }
}
alarm[0] = 200
for (t = 0; t &lt; 1000; t += 25)
{
    with (instance_create(-200, random_range(0, 480), oWindPart))
    {
        x += (hspeed * other.t)
        y += (vspeed * other.t)
    }
}
alarm[1] = 25
with (objBlock)
{
    if (object_index == objBlock)
    {
        for (ix = 0; ix &lt; (2 * image_xscale); ix += 1)
        {
            for (iy = 0; iy &lt; (2 * image_yscale); iy += 1)
            {
                p = instance_create(((x + (16 * ix)) + 8), ((y + (16 * iy)) + 8), oCloudPart)
                p.image_blend = image_blend
            }
        }
        _yoff = (496 - y)
        _oline = instance_create(x, (496 + ((_yoff * 4) / 32)), oW7Reflection)
        _oline.image_xscale = image_xscale
    }
}
instance_create(x, y, oLightsW7)
background_blend[0] = bgCol
background_color = bg2Col
with (oCloud)
    image_blend = other.cloudCol
with (oWindPart)
    image_blend = merge_color(c_white, other.cloudCol, 0.5)
with (oCloudPart)
    image_blend = other.cpCol
with (oW7Ocean)
{
    waterCol = other.waterCol
    surfaceCol = other.surfaceCol
}
with (oW7Reflection)
    color = other.surfaceCol
with (oLightsW7)
    ambCol = other.lightCol
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
