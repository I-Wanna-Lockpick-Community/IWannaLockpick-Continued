<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKHDiary</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kina variables
image_speed = 0;

arrowInd = 0;
state = 0;//0 = Inert, 1 = Fade Out, 2 = Dialog Menu, 3 = Talking, 4 = Kablooey
inRange = 0;
t = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialog vars
numConvos = 20;
curConvo = 0;//Represents conversation ID, NOT scroll position
scrollIndex = 0;//For the actual scrolling selection
centerConvo = 2;//For scrolling the options
convoRef[0] = 0;//Every visible conversation is added to an array.
numConvoVis = 0;
//This is so invisible convos are not counted in the scroll,
//instead of being shown but inaccessible. Just to save space/not spoil.
//scrDefineKinaConvoVis();
for(var i = 0; i &lt; numConvos; i += 1){
    convoVis[i] = 1;//We stan anachronistic storytelling in this household
    convoMenu[i] = -1;//Yknow I'm glad I decided not to program this
    if convoVis[i]{
        convoRef[numConvoVis] = i;
        numConvoVis += 1;
    }
    convoRead[i] = 1;//Did this...ever get used for anything???
}
scrDefineDiaryConvos();
setCenterConvoString();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Visual vars
boxLerp = 0;//Based on t in state 2
bumpA = 90;//Visual bumping
bumpDir = 1;//1 = Down, -1 = Up
bumpAmt = 1;
boxW = 200;
boxH = 32;
boxY = y-256;
showArrow = 0;

diaryA = 0;
diaryY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state handle + talk
inRange = 0;//Doubles as the interact arrow show variable
if instance_exists(objPlayer){
    inRange = (distance_to_object(objPlayer) &lt; 12);
}else{
    inRange = 0;
}
//Cheese code cheese code!
with oMouseover{
    if warpMode != 0{
        other.inRange = 0;
    }
}
showArrow = 0;
switch state{
    case 0://Inert
        if inRange{
            showArrow = 1;
            if state == 0 &amp;&amp; scrButtonCheckPressed(global.intrButton){//Init dialog select menu
                //Face the player correctly
                //if objPlayer.x &lt; x{objPlayer.xScale = 1;}else{objPlayer.xScale = -1;}
                //State change
                state = 2; t = 0;
                scrPlaySoundExt(sndQuery,1,1,false);
                //Reset scroll variables
                scrollIndex = 0;
                centerConvo = 2;
                curConvo = convoID[scrollIndex];
                setCenterConvoString();
                global.inCutscene = 1;
                with objPlayer{frozen = 1;}
            }
        }
    break;
    case 1://Fading out (box query disappears)
        t = min(t+1,25);
        boxLerp = sin(degtorad(90+t*90/25));
        boxY = y - 256 - round(16*boxLerp);
        if t == 25{
            state = 0;
            global.inCutscene = 0;
            with objPlayer{frozen = 0;}
        }
    break;
    case 2://Select dialog
        t = min(t+1,25);
        boxLerp = sin(degtorad(t*90/25));
        boxY = y - 256 - round(16*boxLerp);
        //Box visual bumping
        bumpA = min(bumpA+90/10,90);//Visual bumping
        bumpAmt = 1-sin(degtorad(bumpA));
        boxY += round(4*bumpDir*bumpAmt);
        //Controls
        if t == 25{
            if scrButtonCheckPressed(global.downButton){//Scroll Down
                if scrollIndex &lt; (numConvoVis-1){
                    scrollIndex += 1;
                    curConvo = convoID[convoRef[scrollIndex]];
                    centerConvo = max(min(scrollIndex,numConvoVis-3),2);
                    setCenterConvoString();
                    scrPlaySoundExt(sndDiaScroll,1,1,false);
                    bumpA = 0; bumpDir = 1;
                }else if numConvoVis &gt; 1{
                    scrollIndex = 0;
                    curConvo = convoID[convoRef[scrollIndex]];
                    centerConvo = max(min(scrollIndex,numConvoVis-3),2);
                    setCenterConvoString();
                    scrPlaySoundExt(sndDiaScroll,1,1,false);
                    bumpA = 0; bumpDir = -1;
                }
            }else if scrButtonCheckPressed(global.upButton){//Scroll Up
                if scrollIndex &gt; 0{
                    scrollIndex -= 1;
                    curConvo = convoID[convoRef[scrollIndex]];
                    centerConvo = max(min(scrollIndex,numConvoVis-3),2);
                    setCenterConvoString();
                    scrPlaySoundExt(sndDiaScroll,1,1,false);
                    bumpA = 0; bumpDir = -1;
                }else if numConvoVis &gt; 1{
                    scrollIndex = numConvoVis - 1;
                    curConvo = convoID[convoRef[scrollIndex]];
                    centerConvo = max(min(scrollIndex,numConvoVis-3),2);
                    setCenterConvoString();
                    scrPlaySoundExt(sndDiaScroll,1,1,false);
                    bumpA = 0; bumpDir = 1;
                }
            }else if scrButtonCheckPressed(global.selButton){//Select
                state = 3; t = 0;
                global.convoRead[curConvo] = 1;
                doJingle = 0;
                scrSaveGame(false);//Save the fact that the convo was read
                with oDialogHandle{
                    diaStart(other.curConvo);
                }
                scrPlaySoundExt(sndQuery3,1,1,false);
                scrPlaySoundExt(sndSelectMade,.6,1.25,0);
            }else if scrButtonCheckPressed(global.shootButton){//Cancel
                state = 1; t = 0;
                scrPlaySoundExt(sndQuery2,1,1,false);
            }
        }
    break;
    case 3://Talking (Dialog handle does the work
        t = min(t+1,25);
        boxLerp = sin(degtorad(90+t*90/25));
        boxY = y - 256 - round(16*boxLerp);
    break;
}
if inRange{
    arrowInd = (arrowInd + .1) mod 2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///visual
diaryA = (diaryA + 1) mod 360;
diaryY = round(2*sin(degtorad(diaryA)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite
draw_self();
if state == 0{
    draw_sprite(sprKHDiary,1,x,y-8+diaryY);
}else{
    draw_sprite(sprKHDiary,2,x,y-8+diaryY);
}
//Arrow
if showArrow &amp;&amp; state == 0{
    draw_sprite(sprUpArrowDoor,arrowInd,x,y-8);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialog selector
if state != 0{
    draw_set_alpha(boxLerp);
    for(var i = 0; i &lt; 5; i += 1){
        var dy = boxY + boxH * i;
        var dx = 400;
        draw_set_color(c_white);
        var _unread = 0;
        var _selected = 0;
        if (centerConvo+i-2) &lt; numConvoVis{//Unread
            if !global.convoRead[convoID[convoRef[centerConvo+i-2]]]{
                _unread = 1;
                draw_set_color(make_color_rgb(255,100,180));
            }
        }
        if scrollIndex == (centerConvo+i-2){//Current selected
            _selected = 1;
            if !_unread{draw_set_color(make_color_rgb(255,150,200))};
        }
        draw_rectangle(dx-boxW,dy,dx+boxW,dy+32,0);
        if scrollIndex == (centerConvo+i-2){//Flair rectangle
            draw_set_color(make_color_rgb(200,100,150));
            draw_rectangle(dx-boxW+4,dy+4,dx+boxW-4,dy+32-4,0);
        }
        //text
        draw_set_color(make_color_rgb(60,0,30));
        draw_rectangle(dx-boxW,dy,dx+boxW,dy+32,1);
        draw_set_font(fMiniID);
        draw_set_halign(fa_left);
        draw_set_valign(fa_center);
        draw_set_alpha(boxLerp*.35);
        draw_text(dx-boxW+8+1,dy+boxH*.5+1,scrollStr[i]);
        draw_set_alpha(boxLerp);
        draw_text(dx-boxW+8,dy+boxH*.5,scrollStr[i]);
        draw_set_color(c_white);
        //Unread indicator
        if _unread{
            draw_sprite_ext(sprConvoNotif,0,dx+boxW-8,dy+boxH*.5,1,1,0,c_white,boxLerp);
        }
    }
    draw_set_alpha(1);
}
//control text
var dy = boxY + boxH * 5;
var dx = 400;
var _ctrlStr = getBindStr(global.upButton,2)+"/"+getBindStr(global.downButton,2)+": Move, "+getBindStr(global.selButton,2)+": Select, "+getBindStr(global.shootButton,2)+": Cancel";
draw_set_color(make_color_rgb(150,25,75));
draw_set_font(fMiniID);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_set_alpha(boxLerp*.35);
draw_text(dx-boxW+8+1,dy+boxH*.5+1,_ctrlStr);
draw_set_alpha(boxLerp);
draw_text(dx-boxW+8,dy+boxH*.5,_ctrlStr);
draw_set_alpha(1);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
