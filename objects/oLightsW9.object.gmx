<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///is also the bg object
//sets an alarm for the door particle effect + inits light wave variable
for(t=0;t&lt;800;t+=20){
    p=instance_create(random(768),607,oFloatPart3);
    p.x += p.hspeed*t;
    p.y += p.vspeed*t;
}
alarm[0] = 20;
lightA = 0;
lightMult = 1;

//"generates" a unique bg for each room
var sOld, sNew;
sOld = random_get_seed();
sNew = room;
random_set_seed(sNew);
var bgX1 = random(800);
var bgY1 = random(608);
var bgX2 = random(800);
var bgY2 = random(608);
random_set_seed(sOld);

background_visible[1] = true;
background_index[1] = bBookshelf;
background_x[1] = bgX1;
background_y[1] = bgY1;
background_xscale[1] = .3;
background_yscale[1] = .3;
background_vspeed[1] = -.1;
background_blend[1] = c_dkgray;

background_visible[2] = true;
background_index[2] = bBookshelf;
background_x[2] = bgX2;
background_y[2] = bgY2;
background_xscale[2] = .6;
background_yscale[2] = .6;
background_vspeed[2] = -.2;
background_blend[2] = c_gray;

background_visible[3] = true;
background_index[3] = bGradient;
background_blend[3] = make_color_rgb(100,20,20);
background_alpha[3] = .4;
background_yscale[3] = .45;
background_vtiled[3] = false;

background_index[4] = bMistOcean;
background_visible[4] = true;
background_xscale[4] = 1.25; background_yscale[4] = 1.25;
background_blend[4] = make_color_hsv(0,0,160);
background_alpha[4] = .6;
background_y[4] = 608-375;
background_hspeed[4] = .3*2;
background_vtiled[4] = false;

background_index[5] = bMistOcean;
background_visible[5] = true;
background_foreground[5] = true;
background_xscale[5] = 1.5; background_yscale[5] = 1.5;
background_blend[5] = make_color_hsv(0,0,190);
background_alpha[5] = .6;
background_y[5] = 608-150;
background_hspeed[5] = .3*2.4;
background_vtiled[5] = false;


//Does some hacky stuff to "autotile" for me, cause god I hate having to choose tiles
/*var tiles = tile_get_ids_at_depth(95000000);//credit to gamemaker documentation
var tileX = 0;
var tileY = 0;
var tileL = 0;
var tileT = 0;
for (var i = 0; i &lt; array_length_1d(tiles); i++;){
    tileX = tile_get_x(tiles[i]);
    tileY = tile_get_y(tiles[i]);
    tileL = tile_get_left(tiles[i]);
    tileT = tile_get_top(tiles[i]);
    switch ((tileX + tileY) mod 7){
        case 0:
        case 1:
            tile_delete(tiles[i]);
            tile_add(tileBookshelf,tileL+96,tileT,32,32,tileX,tileY,95000000);
        break;
        case 2:
        case 3:
            tile_delete(tiles[i]);
            tile_add(tileBookshelf,tileL,tileT+96,32,32,tileX,tileY,95000000);
        break;
        case 4:
        case 5:
            tile_delete(tiles[i]);
            tile_add(tileBookshelf,tileL+96,tileT+96,32,32,tileX,tileY,95000000);
        break;
    }
    tile_add(bAllTiles,128,128,32,32,tileX+3,tileY+3,100000000);
}
tile_layer_hide(100000000);
tile_layer_show(100000000);*/

//surface stuff
s = surface_create(800,608);
ambTop = make_color_rgb(190,190,190);
ambBot = make_color_rgb(190,160,160);
surface_set_target(s);
draw_rectangle_color(0,0,799,607,ambTop,ambTop,ambBot,ambBot,0);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(s);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///door particle
alarm[0] = 20;
instance_create(random_range(0,768),607,oFloatPart3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//light surface stuff

lightA = (lightA + 2) mod 360;
lightMult = 1.33 * (1 + .15*sin(degtorad(lightA)) + .015 * random_range(-1,1));

if surface_exists(s){
    surface_set_target(s);
    draw_rectangle_color(0,0,799,607,ambTop,ambTop,ambBot,ambBot,0);
    draw_set_blend_mode(bm_add);
    with oLight{
        if draw{
            draw_sprite_ext(sprLightSpot,0,x-view_xview,y-view_yview,image_xscale*other.lightMult,image_yscale*other.lightMult,0,image_blend,image_alpha);
        }
    }
    if instance_exists(objPlayer){
        with objPlayer{
            draw_sprite_ext(sprLightSpot,0,x-view_xview,y-view_yview,.24*other.lightMult,.24*other.lightMult,0,c_white,1);
        }
    }
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
}else{
    s = surface_create(800,608);
    surface_set_target(s);
    draw_rectangle_color(0,0,799,607,ambTop,ambTop,ambBot,ambBot,0);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(s);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(s){
    draw_set_blend_mode_ext(bm_dest_color,bm_zero);
    draw_surface(s,0,0);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
