<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_blend[0] = 8421504
background_vspeed[0] = 1
letA = 0
letA2 = 0
for (i = 0; i &lt; 7; i += 1)
    letY[i] = (16 * sin(degtorad((letA + (i * 30)))))
letY2 = (4 * sin(degtorad(letA2)))
cubeX = 400
cubeYA = 0
cubeY = (304 + (8 * sin(degtorad(cubeYA))))
angleX = 0
angleY = 0
angleZ = 0
angleXS = 1
angleYS = 0.25
angleZS = 0
vecX = 24
vecY = 24
vecZ = 24
storedX = 24
storedY = 24
storedZ = 24
endX = 24
endY = 24
endZ = 24
p[0, 0] = (endX + 400)
p[0, 1] = (endY + 304)
p[0, 2] = endZ
p[1, 0] = ((-endX) + 400)
p[1, 1] = (endY + 304)
p[1, 2] = endZ
p[2, 0] = ((-endX) + 400)
p[2, 1] = (endY + 304)
p[2, 2] = (-endZ)
p[3, 0] = (endX + 400)
p[3, 1] = (endY + 304)
p[3, 2] = (-endZ)
p[4, 0] = (endX + 400)
p[4, 1] = ((-endY) + 304)
p[4, 2] = endZ
p[5, 0] = ((-endX) + 400)
p[5, 1] = ((-endY) + 304)
p[5, 2] = endZ
p[6, 0] = ((-endX) + 400)
p[6, 1] = ((-endY) + 304)
p[6, 2] = (-endZ)
p[7, 0] = (endX + 400)
p[7, 1] = ((-endY) + 304)
p[7, 2] = (-endZ)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>letA = ((letA + 1.2) % 360)
letA2 = ((letA2 + 0.5) % 360)
for (i = 0; i &lt; 7; i += 1)
    letY[i] = (16 * sin(degtorad((letA + (i * 30)))))
letY2 = (4 * sin(degtorad(letA2)))
cubeX = 400
cubeYA = ((cubeYA + 2) % 360)
cubeY = (304 + (8 * sin(degtorad(cubeYA))))
angleX = ((angleX + angleXS) % 360)
sinX = sin(degtorad(angleX))
cosX = cos(degtorad(angleX))
angleY = ((angleY + angleYS) % 360)
sinY = sin(degtorad(angleY))
cosY = cos(degtorad(angleY))
angleZ = ((angleZ + angleZS) % 360)
sinZ = sin(degtorad(angleZ))
cosZ = cos(degtorad(angleZ))
endX = 24
endY = 24
endZ = 24
p[0, 0] = endX
p[0, 1] = endY
p[0, 2] = endZ
p[1, 0] = (-endX)
p[1, 1] = endY
p[1, 2] = endZ
p[2, 0] = (-endX)
p[2, 1] = endY
p[2, 2] = (-endZ)
p[3, 0] = endX
p[3, 1] = endY
p[3, 2] = (-endZ)
p[4, 0] = endX
p[4, 1] = (-endY)
p[4, 2] = endZ
p[5, 0] = (-endX)
p[5, 1] = (-endY)
p[5, 2] = endZ
p[6, 0] = (-endX)
p[6, 1] = (-endY)
p[6, 2] = (-endZ)
p[7, 0] = endX
p[7, 1] = (-endY)
p[7, 2] = (-endZ)
for (i = 0; i &lt; 8; i += 1)
{
    storedX = ((p[i, 0] * cosY) + (p[i, 2] * sinY))
    storedY = p[i, 1]
    storedZ = (((-p[i, 0]) * sinY) + (p[i, 2] * cosY))
    endX = storedX
    endY = ((storedY * cosX) - (storedZ * sinX))
    endZ = ((storedY * sinX) + (storedZ * cosX))
    p[i, 0] = (endX + cubeX)
    p[i, 1] = (endY + cubeY)
    p[i, 2] = endZ
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_gray)
draw_rectangle(217.6, 160, 582.4, 448, 1)
draw_set_color(c_white)
draw_line_color(217.6, 160, 96, 64, c_gray, c_white)
draw_line_color(217.6, 448, 96, 544, c_gray, c_white)
draw_line_color(582.4, 160, 704, 64, c_gray, c_white)
draw_line_color(582.4, 448, 704, 544, c_gray, c_white)
for (i = 0; i &lt; 7; i += 1)
{
    draw_sprite_ext(sprWelcomeLetters, i, ((400 + (64 * (i - 3))) + 3), (((192 + letY[i]) + letY2) + 3), 1, 1, (letY2 * 3), c_gray, 1)
    draw_sprite_ext(sprWelcomeLetters, i, (400 + (64 * (i - 3))), ((192 + letY[i]) + letY2), 1, 1, (letY2 * 3), c_white, 1)
}
draw_line(p[0, 0], p[0, 1], p[1, 0], p[1, 1])
draw_line(p[1, 0], p[1, 1], p[2, 0], p[2, 1])
draw_line(p[2, 0], p[2, 1], p[3, 0], p[3, 1])
draw_line(p[3, 0], p[3, 1], p[0, 0], p[0, 1])
draw_line(p[0, 0], p[0, 1], p[4, 0], p[4, 1])
draw_line(p[1, 0], p[1, 1], p[5, 0], p[5, 1])
draw_line(p[2, 0], p[2, 1], p[6, 0], p[6, 1])
draw_line(p[3, 0], p[3, 1], p[7, 0], p[7, 1])
draw_line(p[4, 0], p[4, 1], p[5, 0], p[5, 1])
draw_line(p[5, 0], p[5, 1], p[6, 0], p[6, 1])
draw_line(p[6, 0], p[6, 1], p[7, 0], p[7, 1])
draw_line(p[7, 0], p[7, 1], p[4, 0], p[4, 1])
draw_sprite(sprWelcomeLetters, 7, cubeX, cubeY)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
