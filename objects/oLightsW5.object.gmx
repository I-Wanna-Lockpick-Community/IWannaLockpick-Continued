<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sOld, sNew, ix, tx, iy, ty;
lightA = 0
lightMult = 1
sOld = random_get_seed()
sNew = room
random_set_seed(sNew)
with (oBlockTile)
{
    for (ix = 0; ix &lt; image_xscale; ix += 1)
    {
        tx = (x + (32 * ix))
        for (iy = 0; iy &lt; image_yscale; iy += 1)
        {
            ty = (y + (32 * iy))
            tile_add(tileAttic, 0, (32 * choose(0, 1, 2, 3)), 32, 32, tx, ty, -5)
        }
    }
}
with (objBlock)
{
    if (object_index == objBlock)
    {
        for (ix = 0; ix &lt; image_xscale; ix += 1)
        {
            tx = (x + (32 * ix))
            for (iy = 0; iy &lt; image_yscale; iy += 1)
            {
                ty = (y + (32 * iy))
                tile_add(tileAttic, 0, (32 * choose(0, 1, 2, 3)), 32, 32, tx, ty, -5)
                if ((instance_position(tx, (ty - 32), objBlock) == -4) &amp;&amp; (instance_position(tx, (ty - 32), oBlockTile) == -4))
                    tile_add(tileAttic, 32, 0, 32, 32, tx, (ty - 32), -5)
                if ((instance_position(tx, (ty + 32), objBlock) == -4) &amp;&amp; (instance_position(tx, (ty + 32), oBlockTile) == -4))
                    tile_add(tileAttic, 32, 32, 32, 32, tx, (ty + 32), -5)
                with (oDoorSimple)
                {
                    x = -4096
                    y = -4096
                }
                with (oDoorCombo)
                {
                    x = -4096
                    y = -4096
                }
                if ((instance_position((tx - 32), ty, objBlock) == -4) &amp;&amp; (instance_position((tx - 32), ty, oBlockTile) == -4))
                    tile_add(tileAttic, 96, 0, 32, 32, (tx - 32), ty, -5)
                if ((instance_position((tx + 32), ty, objBlock) == -4) &amp;&amp; (instance_position((tx + 32), ty, oBlockTile) == -4))
                    tile_add(tileAttic, 64, 0, 32, 32, (tx + 32), ty, -5)
                with (oDoorSimple)
                {
                    x = xstart
                    y = ystart
                }
                with (oDoorCombo)
                {
                    x = xstart
                    y = ystart
                }
            }
        }
    }
}
random_set_seed(sOld)
background_visible[2] = 1
background_index[2] = bMist
background_hspeed[2] = 0.8
background_blend[2] = make_color_rgb(150, 120, 0)
background_alpha[2] = 0.75
s = surface_create(800, 608)
ambTop = make_color_rgb(100, 90, 70)
ambBot = make_color_rgb(100, 90, 70)
surface_set_target(s)
draw_rectangle_color(0, 0, 799, 607, ambTop, ambTop, ambBot, ambBot, 0)
surface_reset_target()
myOutline = instance_create(0, 0, oW5SurfStorage)
s2Pointer = myOutline.s2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(s)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tiles, i, tile, tLeft, tTop;
lightA = ((lightA + 2) % 360)
lightMult = (1.33 * ((1 + (0.15 * sin(degtorad(lightA)))) + (0.015 * random_range(-1, 1))))
if surface_exists(s)
{
    surface_set_target(s)
    draw_clear_alpha(c_black, 1)
    draw_set_blend_mode(1)
    with (oLight)
    {
        if draw
            draw_sprite_ext(sprLightSpot, 0, (x - view_xview[0]), (y - view_yview[0]), (image_xscale * other.lightMult), (image_yscale * other.lightMult), 0, image_blend, image_alpha)
    }
    if instance_exists(objPlayer)
    {
        with (objPlayer)
            draw_sprite_ext(sprLightSpot, 0, (x - view_xview[0]), (y - view_yview[0]), (0.24 * other.lightMult), (0.24 * other.lightMult), 0, c_white, 1)
    }
    draw_set_blend_mode(0)
    surface_reset_target()
}
else
{
    s = surface_create(800, 608)
    surface_set_target(s)
    draw_rectangle_color(0, 0, 799, 607, ambTop, ambTop, ambBot, ambBot, 0)
    surface_reset_target()
}
if surface_exists(s2Pointer)
{
    surface_set_target(s2Pointer)
    draw_clear_alpha(c_black, 0)
    tiles = tile_get_ids_at_depth(-5)
    for (i = 0; i &lt; array_length_1d(tiles); i++)
    {
        tile = tiles[i]
        tLeft = tile_get_left(tile)
        tTop = tile_get_top(tile)
        draw_sprite_part_ext(sprW5Bright, 0, tLeft, tTop, 32, 32, tile_get_x(tile), tile_get_y(tile), 1, 1, c_white, 1)
    }
    draw_set_blend_mode_ext(9, 1)
    if surface_exists(s)
        draw_surface(s, 0, 0)
    draw_set_blend_mode(0)
    surface_reset_target()
}
else
{
    with (myOutline)
    {
        s2 = surface_create(800, 608)
        surface_set_target(s2)
        draw_clear_alpha(c_black, 0)
        surface_reset_target()
        other.s2Pointer = s2
    }
}
if surface_exists(s)
{
    surface_set_target(s)
    draw_rectangle_color(0, 0, 799, 607, ambTop, ambTop, ambBot, ambBot, 0)
    draw_set_blend_mode(1)
    with (oLight)
    {
        if draw
            draw_sprite_ext(sprLightSpot, 0, (x - view_xview[0]), (y - view_yview[0]), (image_xscale * other.lightMult), (image_yscale * other.lightMult), 0, image_blend, image_alpha)
    }
    if instance_exists(objPlayer)
    {
        with (objPlayer)
            draw_sprite_ext(sprLightSpot, 0, (x - view_xview[0]), (y - view_yview[0]), (0.24 * other.lightMult), (0.24 * other.lightMult), 0, c_white, 1)
    }
    draw_set_blend_mode(0)
    surface_reset_target()
}
else
{
    s = surface_create(800, 608)
    surface_set_target(s)
    draw_rectangle_color(0, 0, 799, 607, ambTop, ambTop, ambBot, ambBot, 0)
    surface_reset_target()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(s)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(s)
{
    draw_set_blend_mode_ext(9, 1)
    draw_surface(s, 0, 0)
    draw_set_blend_mode(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
