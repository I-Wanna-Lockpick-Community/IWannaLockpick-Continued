<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLucas</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
image_speed = 0
arrowInd = 0
state = 0
inRange = 0
t = 0
numConvos = 7
curConvo = 0
scrollIndex = 0
centerConvo = 2
convoRef[0] = 0
numConvoVis = 0
for (i = 0; i &lt; numConvos; i += 1)
{
    convoVis[i] = 1
    if ((i &gt; 0) &amp;&amp; (!global.convoRead[(82 + i)]))
        convoVis[i] = 0
    convoMenu[i] = -1
    if convoVis[i]
    {
        convoRef[numConvoVis] = i
        numConvoVis += 1
    }
    convoRead[i] = 1
}
scrDefineWatsConvos()
setCenterConvoString()
boxLerp = 0
bumpA = 90
bumpDir = 1
bumpAmt = 1
boxW = 200
boxH = 32
boxY = (y - 256)
showArrow = 0
diaryA = 0
diaryY = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inRange = 0
if instance_exists(objPlayer)
    inRange = (distance_to_object(objPlayer) &lt; 12)
else
    inRange = 0
showArrow = 0
switch state
{
    case 0:
        if inRange
        {
            showArrow = 1
            if ((state == 0) &amp;&amp; scrButtonCheckPressed(global.intrButton))
            {
                state = 2
                t = 0
                scrPlaySoundExt(sndQuery, 1, 1, false)
                scrollIndex = 0
                centerConvo = 2
                curConvo = convoID[scrollIndex]
                setCenterConvoString()
                global.inCutscene = 1
                with (objPlayer)
                    frozen = 1
            }
        }
        break
    case 1:
        t = min((t + 1), 25)
        boxLerp = sin(degtorad((90 + ((t * 90) / 25))))
        boxY = ((y - 224) - round((16 * boxLerp)))
        if (t == 25)
        {
            state = 0
            global.inCutscene = 0
            with (objPlayer)
                frozen = 0
        }
        break
    case 2:
        t = min((t + 1), 25)
        boxLerp = sin(degtorad(((t * 90) / 25)))
        boxY = ((y - 224) - round((16 * boxLerp)))
        bumpA = min((bumpA + 9), 90)
        bumpAmt = (1 - sin(degtorad(bumpA)))
        boxY += round(((4 * bumpDir) * bumpAmt))
        if (t == 25)
        {
            if scrButtonCheckPressed(global.downButton)
            {
                if (scrollIndex &lt; (numConvoVis - 1))
                {
                    scrollIndex += 1
                    curConvo = convoID[convoRef[scrollIndex]]
                    centerConvo = max(min(scrollIndex, (numConvoVis - 3)), 2)
                    setCenterConvoString()
                    scrPlaySoundExt(sndDiaScroll, 1, 1, false)
                    bumpA = 0
                    bumpDir = 1
                }
                else if (numConvoVis &gt; 1)
                {
                    scrollIndex = 0
                    curConvo = convoID[convoRef[scrollIndex]]
                    centerConvo = max(min(scrollIndex, (numConvoVis - 3)), 2)
                    setCenterConvoString()
                    scrPlaySoundExt(sndDiaScroll, 1, 1, false)
                    bumpA = 0
                    bumpDir = -1
                }
            }
            else if scrButtonCheckPressed(global.upButton)
            {
                if (scrollIndex &gt; 0)
                {
                    scrollIndex -= 1
                    curConvo = convoID[convoRef[scrollIndex]]
                    centerConvo = max(min(scrollIndex, (numConvoVis - 3)), 2)
                    setCenterConvoString()
                    scrPlaySoundExt(sndDiaScroll, 1, 1, false)
                    bumpA = 0
                    bumpDir = -1
                }
                else if (numConvoVis &gt; 1)
                {
                    scrollIndex = (numConvoVis - 1)
                    curConvo = convoID[convoRef[scrollIndex]]
                    centerConvo = max(min(scrollIndex, (numConvoVis - 3)), 2)
                    setCenterConvoString()
                    scrPlaySoundExt(sndDiaScroll, 1, 1, false)
                    bumpA = 0
                    bumpDir = 1
                }
            }
            else if scrButtonCheckPressed(global.selButton)
            {
                state = 3
                t = 0
                global.convoRead[curConvo] = 1
                doJingle = 0
                scrSaveGame(0)
                with (oDialogHandle)
                    diaStart(other.curConvo)
                scrPlaySoundExt(sndQuery3, 1, 1, false)
                scrPlaySoundExt(sndSelectMade, 0.6, 1.25, false)
            }
            else if scrButtonCheckPressed(global.shootButton)
            {
                state = 1
                t = 0
                scrPlaySoundExt(sndQuery2, 1, 1, false)
            }
        }
        break
    case 3:
        t = min((t + 1), 25)
        boxLerp = sin(degtorad((90 + ((t * 90) / 25))))
        boxY = ((y - 224) - round((16 * boxLerp)))
        break
}

if inRange
    arrowInd = ((arrowInd + 0.1) % 2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, dy, dx, _unread, _selected, _ctrlStr;
if (state == 0)
    draw_sprite(sprLucas, 0, x, y)
else
    draw_sprite(sprLucas, 1, x, y)
if (showArrow &amp;&amp; (state == 0))
    draw_sprite(sprUpArrowDoor, arrowInd, x, (y - 8))
if (state != 0)
{
    draw_set_alpha(boxLerp)
    for (i = 0; i &lt; 5; i += 1)
    {
        dy = (boxY + (boxH * i))
        dx = 400
        draw_set_color(c_white)
        _unread = 0
        _selected = 0
        if (((centerConvo + i) - 2) &lt; numConvoVis)
        {
            if (!global.convoRead[convoID[convoRef[((centerConvo + i) - 2)]]])
            {
                _unread = 1
                draw_set_color(make_color_rgb(255, 180, 100))
            }
        }
        else
            draw_set_color(make_color_rgb(100, 100, 100))
        if (scrollIndex == ((centerConvo + i) - 2))
        {
            _selected = 1
            if (!_unread)
                draw_set_color(make_color_rgb(255, 200, 150))
        }
        draw_rectangle((dx - boxW), dy, (dx + boxW), (dy + 32), 0)
        if (scrollIndex == ((centerConvo + i) - 2))
        {
            draw_set_color(make_color_rgb(200, 150, 100))
            draw_rectangle(((dx - boxW) + 4), (dy + 4), ((dx + boxW) - 4), ((dy + 32) - 4), 0)
        }
        draw_set_color(make_color_rgb(60, 30, 0))
        draw_rectangle((dx - boxW), dy, (dx + boxW), (dy + 32), 1)
        draw_set_font(fMiniID)
        draw_set_halign(fa_left)
        draw_set_valign(fa_middle)
        draw_set_alpha((boxLerp * 0.35))
        draw_text((((dx - boxW) + 8) + 1), ((dy + (boxH * 0.5)) + 1), scrollStr[i])
        draw_set_alpha(boxLerp)
        draw_text(((dx - boxW) + 8), (dy + (boxH * 0.5)), scrollStr[i])
        draw_set_color(c_white)
        if _unread
            draw_sprite_ext(sprConvoNotif, 0, ((dx + boxW) - 8), (dy + (boxH * 0.5)), 1, 1, 0, c_white, boxLerp)
    }
    draw_set_alpha(1)
}
dy = (boxY + (boxH * 5))
dx = 400
_ctrlStr = (((((((getBindStr(global.upButton, 2) + "/") + getBindStr(global.downButton, 2)) + ": Move, ") + getBindStr(global.selButton, 2)) + ": Select, ") + getBindStr(global.shootButton, 2)) + ": Cancel")
draw_set_color(make_color_rgb(150, 75, 25))
draw_set_font(fMiniID)
draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_set_alpha((boxLerp * 0.35))
draw_text((((dx - boxW) + 8) + 1), ((dy + (boxH * 0.5)) + 1), _ctrlStr)
draw_set_alpha(boxLerp)
draw_text(((dx - boxW) + 8), (dy + (boxH * 0.5)), _ctrlStr)
draw_set_alpha(1)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
