<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//BG Properties
background_index[2] = bCliffThings3;
background_y[2] = room_height-1216;
background_alpha[2] = .5;
background_xscale[2] = 2;
background_yscale[2] = 2;
background_hspeed[2] = -.25;
background_vspeed[2] = 0;
background_foreground[2] = 0;
background_vtiled[2] = 0;
background_htiled[2] = 1;
background_visible[2] = 1;

background_index[3] = bCliffThings3;
background_y[3] = room_height-608;
background_hspeed[3] = -.5;
background_vspeed[3] = 0;
background_foreground[3] = 0;
background_vtiled[3] = 0;
background_htiled[3] = 1;
background_visible[3] = 1;

background_index[4] = fgSnow;
background_hspeed[4] = -2;
background_vspeed[4] = 2;
background_foreground[4] = 1;
if !global.lowFX{background_visible[4] = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.lowFX{exit;}
draw_set_blend_mode(bm_add);
cTop = make_color_rgb(20,20,40);
cBot = c_black;
draw_rectangle_color(-1,-1,801,609,cTop,cTop,cBot,cBot,0);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.lowFX{exit;}
shadowCol = make_color_rgb(50,50,200);//make_color_rgb(220,255,180);//make_color_rgb(255,180,220); Pink shadows
with oLevel{
    if !isWorld{
        draw_sprite_ext(sprite_index,0,x+2,y+2,image_xscale,image_yscale,image_angle,c_black,0.35*image_alpha);
    }else{
        if rm == rMainHub{
            draw_sprite_ext(sprWorldEntry,0,x+2,y+2,image_xscale,image_yscale,image_angle,c_black,0.35*image_alpha);
        }else{
            draw_sprite_ext(sprWorldEntry,ID+1,x+2,y+2,image_xscale,image_yscale,image_angle,c_black,0.35*image_alpha);
        }
    }
}
with objBlock{
    if object_index == objBlock{
        draw_sprite_ext(sprBlockWhite,0,x+2,y+2,image_xscale,image_yscale,image_angle,other.shadowCol,0.35);
    }else if (object_index == oDoorCombo || object_index == oDoorSimple || object_get_parent(object_index) == oDoorSimple){
        if copyDraw{
            draw_sprite_ext(sprBlockWhite,0,x+2,y+2,w,h,image_angle,other.shadowCol,0.35);
        }
    }else if (object_index == objStairR || object_index == objStairL){
        draw_sprite_ext(sprite_index,image_index,x+2,y+2,image_xscale,image_yscale,image_angle,c_black,0.35*image_alpha);
    }else{
        //draw_sprite_ext(sprite_index,floor(image_index),x+3,y+3,image_xscale,image_yscale,image_angle,c_black,0.35*image_alpha);
    }
}
with oKeyBulk{
    if color == key_MASTER{
        draw_sprite_ext(sprAllKeysWhite,type+8,x+2,y+2,1,1,0,other.shadowCol,.35);
    }else{
        draw_sprite_ext(sprAllKeysWhite,type,x+2,y+2,1,1,0,other.shadowCol,.35);
    }
}
with objPlayer{
    draw_sprite_ext(sprite_index,floor(image_index),x+2,y+2,image_xscale*xScale,image_yscale,image_angle,c_black,0.35*image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
